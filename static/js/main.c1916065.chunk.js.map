{"version":3,"sources":["Card.js","Cardlist.js","CardArray.js","Searchbox.js","App.js","serviceWorker.js","index.js"],"names":["Card","name","id","className","src","alt","Cardlist","deck","map","x","i","key","deck2","Searchbox","searchChange","type","placeholder","onChange","App","e","setState","searchField","target","value","state","this","filteredCards","filter","toLowerCase","includes","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c1916065.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card=({name,id})=>{\r\n\r\nreturn (\r\n\r\n<div className='tc grow bg-light-blue br3 pa3 ma2 dib bw2 shadow-5'>\r\n<img src={`http://en.castlots.org/img/cards/${id}.jpg `} alt='images'/>\r\n<h1>Name:{name}</h1>\r\n</div>\r\n)\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cardlist =({deck})=>{\r\n\r\n    return (\r\n   <div>{\r\n     deck.map((x,i)=>{\r\n\r\n      return  <Card key={i} id={x.id} name={x.name} deck={deck}/>\r\n\r\n\r\n     })\r\n    } </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Cardlist;","\r\n\r\nexport const deck2= [{\"id\":\"c-tuz\",\"name\":\"Ace of Hearts\"},{\"id\":\"c-2\",\"name\":\"2 of Hearts\"},{\"id\":\"c-3\",\"name\":\"3 of Hearts\"},{\"id\":\"c-4\",\"name\":\"4 of Hearts\"},{\"id\":\"c-5\",\"name\":\"5 of Hearts\"},{\"id\":\"c-6\",\"name\":\"6 of Hearts\"},{\"id\":\"c-7\",\"name\":\"7 of Hearts\"},{\"id\":\"c-8\",\"name\":\"8 of Hearts\"},{\"id\":\"c-9\",\"name\":\"9 of Hearts\"},{\"id\":\"c-10\",\"name\":\"10 of Hearts\"},{\"id\":\"c-val\",\"name\":\"Jack of Hearts\"},{\"id\":\"c-dam\",\"name\":\"Queen of Hearts\"},{\"id\":\"c-kor\",\"name\":\"King of Hearts\"},{\"id\":\"p-tuz\",\"name\":\"Ace of Spades\"},{\"id\":\"p-2\",\"name\":\"2 of Spades\"},{\"id\":\"p-3\",\"name\":\"3 of Spades\"},{\"id\":\"p-4\",\"name\":\"4 of Spades\"},{\"id\":\"p-5\",\"name\":\"5 of Spades\"},{\"id\":\"p-6\",\"name\":\"6 of Spades\"},{\"id\":\"p-7\",\"name\":\"7 of Spades\"},{\"id\":\"p-8\",\"name\":\"8 of Spades\"},{\"id\":\"p-9\",\"name\":\"9 of Spades\"},{\"id\":\"p-10\",\"name\":\"10 of Spades\"},{\"id\":\"p-val\",\"name\":\"Jack of Spades\"},{\"id\":\"p-dam\",\"name\":\"Queen of Spades\"},{\"id\":\"p-kor\",\"name\":\"King of Spades\"},{\"id\":\"t-tuz\",\"name\":\"Ace of Clubs\"},{\"id\":\"t-2\",\"name\":\"2 of Clubs\"},{\"id\":\"t-3\",\"name\":\"3 of Clubs\"},{\"id\":\"t-4\",\"name\":\"4 of Clubs\"},{\"id\":\"t-5\",\"name\":\"5 of Clubs\"},{\"id\":\"t-6\",\"name\":\"6 of Clubs\"},{\"id\":\"t-7\",\"name\":\"7 of Clubs\"},{\"id\":\"t-8\",\"name\":\"8 of Clubs\"},{\"id\":\"t-9\",\"name\":\"9 of Clubs\"},{\"id\":\"t-10\",\"name\":\"10 of Clubs\"},{\"id\":\"t-val\",\"name\":\"Jack of Clubs\"},{\"id\":\"t-dam\",\"name\":\"Queen of Clubs\"},{\"id\":\"t-kor\",\"name\":\"King of Clubs\"},{\"id\":\"p-tuz\",\"name\":\"Ace of Diamonds\"},{\"id\":\"p-2\",\"name\":\"2 of Diamonds\"},{\"id\":\"p-3\",\"name\":\"3 of Diamonds\"},{\"id\":\"p-4\",\"name\":\"4 of Diamonds\"},{\"id\":\"p-5\",\"name\":\"5 of Diamonds\"},{\"id\":\"p-6\",\"name\":\"6 of Diamonds\"},{\"id\":\"p-7\",\"name\":\"7 of Diamonds\"},{\"id\":\"p-8\",\"name\":\"8 of Diamonds\"},{\"id\":\"p-9\",\"name\":\"9 of Diamonds\"},{\"id\":\"p-10\",\"name\":\"10 of Diamonds\"},{\"id\":\"p-val\",\"name\":\"Jack of Diamonds\"},{\"id\":\"p-dam\",\"name\":\"Queen of Diamonds\"},{\"id\":\"p-kor\",\"name\":\"King of Diamonds\"}]\r\n","import React from 'react';\r\n\r\nconst Searchbox=({searchChange})=>{\r\n\r\nreturn (\r\n\r\n    <input type='search' placeholder='Search'\r\n    onChange={searchChange}/>\r\n\r\n\r\n\r\n\r\n)\r\n\r\n\r\n\r\n}\r\nexport default Searchbox;","import React, { Component } from 'react';\r\nimport Cardlist from './Cardlist';\r\nimport {deck2} from './CardArray';\r\nimport Searchbox from './Searchbox';\r\n\r\n\r\n\r\n\r\nclass App extends Component{\r\nconstructor(){\r\nsuper()\r\nthis.state={\r\n    deck:deck2,\r\n    searchField:''\r\n}\r\n\r\n}\r\n\r\nsearchChange=(e)=>{\r\nthis.setState({searchField:e.target.value})\r\n}\r\n\r\n\r\n\r\n\r\nrender() {\r\nconst {searchChange}=this    \r\nconst {deck,searchField}=this.state\r\nconst filteredCards=deck.filter(x=>{\r\n    return x.name.toLowerCase().includes(searchField.toLowerCase())\r\n})\r\n\r\nreturn (\r\n\r\n<div className=''>\r\n\r\n<Searchbox searchChange={searchChange}/>\r\n<Cardlist deck={filteredCards}/></div>\r\n\r\n)\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<div><App/></div>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}